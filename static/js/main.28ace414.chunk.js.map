{"version":3,"sources":["components/App.tsx","components/Loader.tsx","helpers/doFavouriteAction.ts","redux/actions/rootActions.ts","components/RootCard.tsx","helpers/getRootCardInfo.ts","components/RootPane.tsx","redux/actions/rootsActions.ts","components/Home.tsx","redux/reducers/initialState.ts","redux/reducers/rootReducer.ts","redux/reducers/rootsReducer.ts","redux/reducers/index.ts","api.ts","redux/sagas/fetchRootSaga.ts","redux/sagas/fetchRootsSaga.ts","redux/sagas/index.ts","redux/store.ts","index.tsx","models/RootTypes/index.ts","models/index.ts","models/constants.ts"],"names":["App","children","className","rotate","keyframes","Circle","styled","div","Loader","doFavouriteAction","root","action","currentFavouritesAsString","localStorage","getItem","FAVOURITES","newFavourites","JSON","parse","url","setItem","stringify","fetchRootSuccess","payLoadWithRoot","type","FETCH_ROOT_SUCCESS","payload","fetchRootFailure","error","FETCH_ROOT_FAILURE","Card","attrs","tabIndex","MainInfoKey","h2","SubInfoKey","h3","InfoValue","p","InfoPairList","li","RootCard","rootType","useState","isFavourite","setIsFavourite","info1","info2","info3","key","value","info4","info5","title","producer","episode_id","created","split","release_date","name","eye_color","birth_year","gender","height","diameter","climate","terrain","population","classification","average_height","average_lifespan","language","model","cargo_capacity","crew","passengers","getRootCardInfo","favouritesAsString","favourites","dispatch","useDispatch","useEffect","onClick","actionType","favouritesRoots","Object","values","count","next","previous","results","handleFavourite","RootPaneGrid","RootPane","useSelector","state","favouritesPayLoadWithRootAsString","favouritesPayLoadWithRoot","FETCH_ROOT","fetchRoot","length","map","result","fetchRootsSuccess","roots","FETCH_ROOTS_SUCCESS","fetchRootsFailure","FETCH_ROOTS_FAILURE","Logo","img","src","alt","StyledNav","Nav","NavButton","button","Home","tab","setTab","keys","push","FETCH_ROOTS","to","tabs","k","NavItem","classnames","active","handleTab","sentenceCase","TabContent","activeTab","TabPane","tabId","Container","isLoading","rootReducer","rootsReducer","reducers","combineReducers","client","JsonClient","getRoots","a","getRoot","fetchRootHandler","fetchRootSaga","call","put","Error","takeLatest","fetchRootsHandler","fetchRootsSaga","indexSaga","all","fork","sagaMiddleWare","createSagaMiddleware","store","createStore","indexReducer","applyMiddleware","run","GlobalStyle","createGlobalStyle","routes","component","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28ace414.chunk.js","sourcesContent":["import React from 'react';\nimport { SwitchProps } from 'react-router';\n\nconst App: React.FC<SwitchProps> = ({ children }) => (\n\t<div className={'App pt-4'}>\n\t\t{children}\n\t</div>\n);\n\nexport default App;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Circle = styled.div`\n  width: 4rem;\n  height: 4rem;\n  border: 2px solid rgba(255, 255, 255, .2);\n  border-right-color: #FFFFFF;\n  border-radius: 50%;\n  margin: auto;\n  animation: ${rotate} var(--timing-base) linear infinite;\n`;\n\nconst Loader: React.FC = () => (\n  <>\n    <Circle />\n    <p className=\"text-center mt-2\">{'Patience you must have, my young Padawan'}</p>\n  </>\n);\n\nexport default Loader;\n","import { FAVOURITES, Root } from '../models';\n\nexport const doFavouriteAction = (root: Root, action: 'ADD' | 'REMOVE') => {\n\tconst currentFavouritesAsString = localStorage.getItem(FAVOURITES);\n\tconst currentFavourites = currentFavouritesAsString ? JSON.parse(currentFavouritesAsString) : {};\n\tconst newFavourites = { ...currentFavourites, [root.url]: root };\n\n\tif (action === 'REMOVE') delete newFavourites[root.url];\n\n\tlocalStorage.setItem(FAVOURITES, JSON.stringify(newFavourites));\n};\n","import {\n\tFETCH_ROOT,\n\tFETCH_ROOT_FAILURE,\n\tFETCH_ROOT_SUCCESS,\n\tPayloadWithRoot,\n\tRootAction,\n} from '../../models';\n\nexport const fetchRoot = (rootType: string): RootAction => (\n\t{ type: FETCH_ROOT, payload: rootType }\n);\n\nexport const fetchRootSuccess = (payLoadWithRoot: PayloadWithRoot): RootAction => (\n\t{ type: FETCH_ROOT_SUCCESS, payload: payLoadWithRoot }\n);\n\nexport const fetchRootFailure = (error: Error): RootAction => (\n\t{ type: FETCH_ROOT_FAILURE, payload: error }\n);\n","import { doFavouriteAction } from '../helpers/doFavouriteAction';\nimport { fetchRootSuccess } from '../redux/actions/rootActions';\nimport { getRootCardInfo } from '../helpers/getRootCardInfo';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { FAVOURITES, Root } from '../models';\nimport React, { useEffect, useState } from 'react';\n\nconst Card = styled.div.attrs({\n\ttabIndex: 0,\n})`\n  border-radius: 0.625rem;\n`;\n\nconst MainInfoKey = styled.h2`\n\tfont-size: var(--text-md);\n\tfont-weight: bold;\n\tmargin-bottom: .25rem;\n`;\n\nconst SubInfoKey = styled.h3`\n\tfont-size: var(--text-xs);\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n\tmargin-bottom: .25rem;\n`;\n\nconst InfoValue = styled.p`\n\tfont-size: var(--text-xs);\n\tmargin-bottom: 0;\n`;\n\nconst InfoPairList = styled.li`\n\tmax-width: 30%;\n`;\n\ninterface RootCardProps {\n\troot: Root;\n\trootType: string;\n}\n\nconst RootCard: React.FC<RootCardProps> = ({ root, rootType }) => {\n\tconst [isFavourite, setIsFavourite] = useState<boolean>(false);\n\tconst { info1, info2, info3, info4, info5 } = getRootCardInfo(root);\n\tconst favouritesAsString = localStorage.getItem(FAVOURITES);\n\tconst favourites = favouritesAsString ? JSON.parse(favouritesAsString) : {};\n\tconst dispatch = useDispatch();\n\n\tconst handleFavourite = () => {\n\t\tconst actionType = isFavourite ? 'REMOVE' : 'ADD';\n\n\t\tdoFavouriteAction(root, actionType);\n\t\tsetIsFavourite(!isFavourite);\n\n\t\tif (actionType === 'REMOVE' && rootType === FAVOURITES) {\n\t\t\tdelete favourites[root.url];\n\t\t\tconst favouritesRoots: Root[] = Object.values(favourites);\n\n\t\t\tdispatch(fetchRootSuccess({\n\t\t\t\tcount: 0,\n\t\t\t\tnext: null,\n\t\t\t\tprevious: null,\n\t\t\t\tresults: favouritesRoots,\n\t\t\t}));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (favourites[root.url]) setIsFavourite(true);\n\t}, [favourites, root.url]);\n\n\treturn (\n\t\t<Card className=\"frost frost--has-hover brand-border p-4 transition pointer text-capitalize\">\n\t\t\t<div className=\"d-flex justify-content-between mb-4\">\n\t\t\t\t<div>\n\t\t\t\t\t<MainInfoKey>{info1}</MainInfoKey>\n\t\t\t\t\t<InfoValue>{info2}</InfoValue>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"align-self-start flex-shrink-0 bg-transparent border-0 p-1 text-reset\"\n\t\t\t\t\tonClick={() => handleFavourite()}\n\t\t\t\t\ttitle=\"Add to Favourites\"\n\t\t\t\t>{ isFavourite ? '★' : '☆'}</button>\n\t\t\t</div>\n\t\t\t<ul className=\"list-unstyled d-flex justify-content-between align-items-end text-center mb-0\">\n\t\t\t\t<InfoPairList>\n\t\t\t\t\t<SubInfoKey>{info3.key}</SubInfoKey>\n\t\t\t\t\t<InfoValue>{info3.value}</InfoValue>\n\t\t\t\t</InfoPairList>\n\t\t\t\t<InfoPairList>\n\t\t\t\t\t<SubInfoKey>{info4.key}</SubInfoKey>\n\t\t\t\t\t<InfoValue>{info4.value}</InfoValue>\n\t\t\t\t</InfoPairList>\n\t\t\t\t<InfoPairList>\n\t\t\t\t\t<SubInfoKey>{info5.key}</SubInfoKey>\n\t\t\t\t\t<InfoValue>{info5.value}</InfoValue>\n\t\t\t\t</InfoPairList>\n\t\t\t</ul>\n\t\t</Card>\n\t);\n};\n\nexport default RootCard;\n","import { Root, RootCardInfo, RootCardInfoPair } from '../models';\n\nexport const getRootCardInfo = (root: Root): RootCardInfo => {\n\tlet info1: string = '';\n\n\tlet info2: string = '';\n\n\tlet info3: RootCardInfoPair = {\n\t\tkey: '',\n\t\tvalue: '',\n\t};\n\n\tlet info4: RootCardInfoPair = {\n\t\tkey: '',\n\t\tvalue: '',\n\t};\n\n\tlet info5: RootCardInfoPair = {\n\t\tkey: '',\n\t\tvalue: '',\n\t};\n\n\tif ('characters' in root) { // Implies Film\n\t\tinfo1 = root.title;\n\t\tinfo2 = `By ${root.producer}`;\n\t\tinfo3 = {\n\t\t\tkey: 'Episode ID',\n\t\t\tvalue: root.episode_id,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Created On',\n\t\t\tvalue: root.created.split('T')[0],\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Release Date',\n\t\t\tvalue: root.release_date.split('T')[0],\n\t\t};\n\t} else if ('birth_year' in root) { // Implies Person\n\t\tinfo1 = root.name;\n\t\tinfo2 = `${root.eye_color} eyes`;\n\t\tinfo3 = {\n\t\t\tkey: 'Birth Year',\n\t\t\tvalue: root.birth_year,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Gender',\n\t\t\tvalue: root.gender,\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Height',\n\t\t\tvalue: root.height,\n\t\t};\n\t} else if ('climate' in root) { // Implies Planet\n\t\tinfo1 = root.name;\n\t\tinfo2 = `${root.diameter} in Diameter`;\n\t\tinfo3 = {\n\t\t\tkey: 'Climate',\n\t\t\tvalue: root.climate,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Terrain',\n\t\t\tvalue: root.terrain,\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Population',\n\t\t\tvalue: root.population,\n\t\t};\n\t} else if ('average_height' in root) { // Implies Specie\n\t\tinfo1 = root.name;\n\t\tinfo2 = `${root.classification}`;\n\t\tinfo3 = {\n\t\t\tkey: 'Average Height',\n\t\t\tvalue: root.average_height,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Average Lifespan',\n\t\t\tvalue: root.average_lifespan,\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Language',\n\t\t\tvalue: root.language,\n\t\t};\n\t} else if ('MGLT' in root) { // Implies Starship\n\t\tinfo1 = root.name;\n\t\tinfo2 = `Model: ${root.model}`;\n\t\tinfo3 = {\n\t\t\tkey: 'Cargo Capacity',\n\t\t\tvalue: root.cargo_capacity,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Crew',\n\t\t\tvalue: root.crew,\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Passangers',\n\t\t\tvalue: root.passengers,\n\t\t};\n\t} else if ('vehicle_class' in root) { // Implies Vehicle\n\t\tinfo1 = root.name;\n\t\tinfo2 = `Model: ${root.model}`;\n\t\tinfo3 = {\n\t\t\tkey: 'Cargo Capacity',\n\t\t\tvalue: root.cargo_capacity,\n\t\t};\n\t\tinfo4 = {\n\t\t\tkey: 'Crew',\n\t\t\tvalue: root.crew,\n\t\t};\n\t\tinfo5 = {\n\t\t\tkey: 'Passangers',\n\t\t\tvalue: root.passengers,\n\t\t};\n\t}\n\n\treturn { info1, info2, info3, info4, info5 };\n};\n","import Loader from './Loader';\nimport RootCard from './RootCard';\nimport styled from 'styled-components';\nimport { AppState, FAVOURITES, Root, RootState } from '../models';\nimport React, { useEffect } from 'react';\nimport { fetchRoot, fetchRootSuccess } from '../redux/actions/rootActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst RootPaneGrid = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n\t\n\t@media (min-width: 768px) {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));\n\t}\n`;\n\ninterface RootProps {\n  rootType: string;\n}\n\nconst RootPane: React.FC<RootProps> = ({ rootType }) => {\n\tconst dispatch = useDispatch();\n\tconst root: RootState = useSelector((state: AppState) => state.root);\n\n\tuseEffect(() => {\n\t\tif (rootType === FAVOURITES) {\n\t\t\tconst favouritesPayLoadWithRootAsString = localStorage.getItem(FAVOURITES);\n\t\t\tconst favouritesPayLoadWithRoot = favouritesPayLoadWithRootAsString ? JSON.parse(\n\t\t\t\tfavouritesPayLoadWithRootAsString\n\t\t\t) : {};\n\t\t\tconst favouritesRoots: Root[] = Object.values(favouritesPayLoadWithRoot);\n\n\t\t\tdispatch(fetchRootSuccess({\n\t\t\t\tcount: 0,\n\t\t\t\tnext: null,\n\t\t\t\tprevious: null,\n\t\t\t\tresults: favouritesRoots,\n\t\t\t}));\n\t\t}\telse {\n\t\t\tdispatch(fetchRoot(rootType));\n\t\t}\n\t}, [dispatch, rootType]);\n\n\treturn (() => {\n\t\tif (root && root.payload && root.payload.results.length) {\n\t\t\treturn (\n\t\t\t\t<RootPaneGrid>\n\t\t\t\t\t{\n\t\t\t\t\t\troot.payload.results.map((result: Root) => (\n\t\t\t\t\t\t\t<RootCard key={result.url}\n\t\t\t\t\t\t\t\troot={result}\n\t\t\t\t\t\t\t\trootType={rootType}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</RootPaneGrid>\n\t\t\t);\n\t\t} else if (root && root.payload) {\n\t\t\treturn <p className=\"text-center\">{'You will find only what you bring in.'}</p>;\n\t\t}\n\n\t\treturn <Loader />;\n\t})();\n};\n\nexport default RootPane;\n","import {\n\tFETCH_ROOTS,\n\tFETCH_ROOTS_FAILURE,\n\tFETCH_ROOTS_SUCCESS,\n\tRoots,\n\tRootsAction,\n} from '../../models';\n\nexport const fetchRoots = (): RootsAction => ({ type: FETCH_ROOTS });\n\nexport const fetchRootsSuccess = (roots: Roots): RootsAction => ({ type: FETCH_ROOTS_SUCCESS, payload: roots });\n\nexport const fetchRootsFailure = (error: Error): RootsAction => ({ type: FETCH_ROOTS_FAILURE, payload: error });\n","import { Link } from 'react-router-dom';\nimport Loader from './Loader';\nimport RootPane from './RootPane';\nimport classnames from 'classnames';\nimport { fetchRoots } from '../redux/actions/rootsActions';\nimport sentenceCase from 'sentence-case';\nimport styled from 'styled-components';\nimport { AppState, FAVOURITES, RootsState } from '../models';\nimport {\n\tContainer,\n\tNav,\n\tNavItem,\n\tTabContent,\n\tTabPane,\n} from 'reactstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Logo = styled.img.attrs({\n\tsrc: '/images/logo.png',\n\talt: 'Star Wars',\n})`\n\twidth: 12.6875rem;\n`;\n\nconst StyledNav = styled(Nav)`\n\tborder-top: var(--brand-border) !important;\n\tborder-bottom: var(--brand-border) !important;\n\tjustify-content: center;\n`;\n\nconst NavButton = styled.button`\n\tbackground-color: transparent;\n\tborder: 1px solid transparent;\n\tpadding: .75rem 1rem;\n\tcolor: inherit;\n\ttext-shadow: inherit;\n\ttext-transform: uppercase;\n\n\t&:hover {\n\t\tbackground-color: var(--glass--md);\n\t}\n\n\t&.active {\n\t\tborder-left: var(--brand-border);\n\t\tborder-right: var(--brand-border);\n\t}\n`;\n\nconst Home: React.FC = () => {\n\tconst dispatch = useDispatch();\n\tconst [tab, setTab] = useState<string>(localStorage.getItem('tab') || 'people');\n\tconst roots: RootsState = useSelector((state: AppState) => state.roots);\n\tconst keys = Object.keys(roots.payload || {});\n\n\tkeys.push(FAVOURITES);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchRoots());\n\t}, [dispatch]);\n\n\tconst handleTab = (tab: string) => {\n\t\tsetTab(tab);\n\t\tlocalStorage.setItem('tab', tab);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-center\">\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Logo />\n\t\t\t\t</Link>\n\t\t\t</h1>\n\n\t\t\t<div className={'my-4'}>\n\t\t\t\t{\n\t\t\t\t\troots.payload ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<StyledNav className=\"frost mb-3\"\n\t\t\t\t\t\t\ttabs\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkeys.map(k => (\n\t\t\t\t\t\t\t\t\t<NavItem key={k}>\n\t\t\t\t\t\t\t\t\t\t<NavButton\n\t\t\t\t\t\t\t\t\t\t\tclassName={classnames({ active: tab === k }, 'transition')}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTab(k)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{sentenceCase(k)}\n\t\t\t\t\t\t\t\t\t\t</NavButton>\n\t\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</StyledNav><TabContent activeTab={tab}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkeys.map(k => (\n\t\t\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\t\t\tkey={`pane-${k}`}\n\t\t\t\t\t\t\t\t\t\ttabId={k}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t{tab === k && <RootPane rootType={k} />}\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TabContent>\n\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import { RootState, RootsState } from '../../models';\n\nexport const roots: RootsState = {\n\tisLoading: true,\n\tpayload: null,\n\terror: null,\n};\n\nexport const root: RootState = {\n\tisLoading: true,\n\tpayload: null,\n\terror: null,\n};\n","import { root } from './initialState';\nimport { FETCH_ROOT, FETCH_ROOT_FAILURE, FETCH_ROOT_SUCCESS, RootAction, RootState } from '../../models';\n\nconst rootReducer = (state: RootState = root, action: RootAction): RootState => {\n\tswitch (action.type) {\n\t\tcase FETCH_ROOT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\tpayload: null,\n\t\t\t\terror: null,\n\t\t\t};\n\n\t\tcase FETCH_ROOT_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\n\t\tcase FETCH_ROOT_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tpayload: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default rootReducer;\n","import { roots } from './initialState';\nimport { FETCH_ROOTS, FETCH_ROOTS_FAILURE, FETCH_ROOTS_SUCCESS, RootsAction, RootsState } from '../../models';\n\nconst rootsReducer = (state: RootsState = roots, action: RootsAction): RootsState => {\n\tswitch (action.type) {\n\t\tcase FETCH_ROOTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t};\n\n\t\tcase FETCH_ROOTS_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\n\t\tcase FETCH_ROOTS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tpayload: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default rootsReducer;\n","import { AppState } from '../../models';\nimport { combineReducers } from 'redux';\nimport rootReducer from './rootReducer';\nimport rootsReducer from './rootsReducer';\n\nconst reducers = combineReducers<AppState>({\n\troots: rootsReducer,\n\troot: rootReducer,\n});\n\nexport default reducers;\n","// @ts-ignore\nimport JsonClient from 'json-client';\n\nconst client = new JsonClient('https://swapi.dev/api/');\n\nexport const getRoots = async () => await client('get', '', null, null);\nexport const getRoot = async (root: string) => await client('get', root, null, null);\n","import { getRoot } from '../../api';\nimport { FETCH_ROOT, PayloadWithRoot, RootAction } from '../../models';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { fetchRootFailure, fetchRootSuccess } from '../actions/rootActions';\n\nfunction *fetchRootHandler(action: RootAction) {\n\ttry {\n\t\t// @ts-ignore\n\t\tconst payLoadWithRoot: PayloadWithRoot = yield call(getRoot, action.payload);\n\n\t\tyield put(fetchRootSuccess(payLoadWithRoot));\n\t} catch {\n\t\tyield put(fetchRootFailure(new Error('There was an error processing your request')));\n\t}\n}\n\nfunction *fetchRootSaga() {\n\tyield takeLatest(FETCH_ROOT, fetchRootHandler);\n}\n\nexport default fetchRootSaga;\n","import { getRoots } from '../../api';\nimport { FETCH_ROOTS, Roots } from '../../models';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { fetchRootsFailure, fetchRootsSuccess } from '../actions/rootsActions';\n\nfunction *fetchRootsHandler() {\n\ttry {\n\t\tconst roots: Roots = yield call(getRoots);\n\n\t\tyield put(fetchRootsSuccess(roots));\n\t} catch {\n\t\tyield put(fetchRootsFailure(new Error('There was an error processing your request')));\n\t}\n}\n\nfunction *fetchRootsSaga() {\n\tyield takeLatest(FETCH_ROOTS, fetchRootsHandler);\n}\n\nexport default fetchRootsSaga;\n","import fetchRootSaga from './fetchRootSaga';\nimport fetchRootsSaga from './fetchRootsSaga';\nimport { all, fork } from 'redux-saga/effects';\n\nfunction *indexSaga() {\n\tyield all([fork(fetchRootsSaga), fork(fetchRootSaga)]);\n}\n\nexport default indexSaga;\n","import createSagaMiddleware from '@redux-saga/core';\nimport indexReducer from './reducers';\nimport indexSaga from './sagas';\nimport { applyMiddleware, createStore } from 'redux';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst store = createStore(\n\tindexReducer,\n\tapplyMiddleware(sagaMiddleWare)\n);\n\nsagaMiddleWare.run(indexSaga);\n\nexport default store;\n","import App from './components/App';\nimport Home from './components/Home';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport store from './redux/store';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst GlobalStyle = createGlobalStyle`\n\t:root {\n\t\t--text-scale-difference: 0.125rem;\n\t\t--text-2xs: 0.625rem;\n\t\t--text-xs: calc(var(--text-2xs) + var(--text-scale-difference));\n\t\t--text-sm: calc(var(--text-xs) + var(--text-scale-difference));\n\t\t--text-base: calc(var(--text-sm) + var(--text-scale-difference));\n\t\t--text-md: calc(var(--text-base) + var(--text-scale-difference));\n\t\t--text-lg: calc(var(--text-md) + var(--text-scale-difference));\n\t\t--text-xl: calc(var(--text-lg) + var(--text-scale-difference));\n\t\t--text-2xl: calc(var(--text-xl) + var(--text-scale-difference));\n\t\t--brand-border: 1px solid rgba(255, 255, 255, .5);\n\t\t--glass: rgba(255, 255, 255, .05);\n\t\t--glass--md: rgba(255, 255, 255, .1);\n\t\t--timing-base: .3s;\n\t}\n\n\t:focus:not(:focus-visible) {\n\t\toutline: 0;\n\t}\n\n\tbody {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground-color: #000000 !important;\n\t\tbackground-image: url('/images/gray-and-black-galaxy.jpeg');\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-attachment: fixed;\n\t\tcolor: rgba(255, 255, 255, .9) !important;\n\t\tfont-family: 'Noto Sans Display', sans-serif !important;\n\t\ttext-shadow: 0 0 2px #000000;\n\t\tword-break: break-word;\n\t}\n\n\t.text-2xs {\n\t\tfont-size: var(--text-2xs);\n\t}\n\n\t.text-xs {\n\t\tfont-size: var(--text-xs);\n\t}\n\n\t.text-sm {\n\t\tfont-size: var(--text-sm);\n\t}\n\n\t.text-base {\n\t\tfont-size: var(--text-base);\n\t}\n\n\t.text-md {\n\t\tfont-size: var(--text-md);\n\t}\n\n\t.text-lg {\n\t\tfont-size: var(--text-lg);\n\t}\n\n\t.text-xl {\n\t\tfont-size: var(--text-xl);\n\t}\n\n\t.text-2xl {\n\t\tfont-size: var(--text-2xl);\n\t}\n\n\t.brand-border {\n\t\tborder: var(--brand-border);\n\t}\n\n\t.frost {\n\t\tbackdrop-filter: blur(5px);\n\t\tbackground-color: var(--glass);\n\t}\n\n\t.frost--has-hover:hover {\n\t\tbackdrop-filter: blur(10px);\n\t\tbackground-color: var(--glass--md);\n\t}\n\n\t.transition {\n\t\ttransition: var(--timing-base);\n\t}\n\n\t.pointer {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst routes = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<GlobalStyle />\n\t\t\t<App>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tcomponent={Home}\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath={'/'}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</App>\n\t\t</Router>\n\t</Provider>\n);\n\nReactDOM.render(routes, document.getElementById('root'));\n","export * from './Film';\nexport * from './Person';\nexport * from './Planet';\nexport * from './Specie';\nexport * from './Starship';\nexport * from './Vehicle';\n","export * from './AppState';\nexport * from './Root';\nexport * from './RootTypes';\nexport * from './Roots';\nexport * from './RootAction';\nexport * from './RootsAction';\nexport * from './RootState';\nexport * from './RootsState';\nexport * from './constants';\nexport * from './RootCardInfo';\nexport * from './RootCardInfoPair';\nexport * from './PayloadWithRoot';\n","export const FETCH_ROOTS = '@@internal/FETCH_ROOTS';\nexport const FETCH_ROOTS_FAILURE = '@@internal/FETCH_ROOTS_FAILURE';\nexport const FETCH_ROOTS_SUCCESS = '@@internal/FETCH_ROOTS_SUCCESS';\n\nexport const FETCH_ROOT = '@@internal/FETCH_ROOT';\nexport const FETCH_ROOT_FAILURE = '@@internal/FETCH_ROOT_FAILURE';\nexport const FETCH_ROOT_SUCCESS = '@@internal/FETCH_ROOT_SUCCESS';\n\nexport const FAVOURITES = 'FAVOURITES';\n"],"sourceRoot":""}